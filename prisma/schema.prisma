generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            Int                @id @default(autoincrement())
  name          String             @db.VarChar(255)
  description   String             @db.VarChar(500)
  price         Decimal            @db.Decimal(10, 2)
  stock         Int                @default(0)
  status        ProductStatus      @default(ACTIVE)
  sales_count   Int                @default(0)
  reviews       ProductReview[]    // 关联评论
  view_count    Int                @default(0)  // 浏览量
  attributes    ProductAttribute[]
  images        ProductImage[]

  created_at    DateTime           @default(now())
  updated_at    DateTime           @updatedAt
  deleted_at    DateTime?
}

model ProductImage {
  id         Int              @id @default(autoincrement())
  product_id Int
  url        String           @db.VarChar(500)
  sort       Int              @default(0)
  type       ProductImageType
  product    Product          @relation(fields: [product_id], references: [id])
}

model ProductAttribute {
  id         Int     @id @default(autoincrement())
  product_id Int
  name       String  @db.VarChar(100)
  value      String  @db.VarChar(255)
  product    Product @relation(fields: [product_id], references: [id])
}

model ProductReview {
  id            Int       @id @default(autoincrement())
  product_id    Int
  user_id       Int
  order_id      Int?         // 可选，追溯到订单，确保用户买过
  rating        Int          // 1~5 星
  content       String       // 评论内容
  images        Json?        // 评论配图，数组
  reply_id      Int?         // 用于商家或用户的追评/回复
  is_visible    Boolean   @default(true)   // 审核隐藏

  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  deleted_at    DateTime?    // 逻辑删除

  product    Product  @relation(fields: [product_id], references: [id])
}

model Blog {
  id          Int        @id @default(autoincrement())
  title       String     @db.VarChar(255)       // 博客标题
  slug        String     @db.VarChar(255)       // SEO URL 友好 slug
  author      String     @db.VarChar(100)       // 作者名称
  language    String     @db.VarChar(10)        // 语言代码，如 en, zh
  md          String     // Markdown 内容
  summary     String?    @db.Text               // 博客摘要，可用于列表或 SEO
  cover_image String?    @db.VarChar(512)       // 封面图片 URL
  reading_time Int      // 预估阅读时间，单位分钟
  // tags        String[]  // 标签，数组存储
  seo         Json?     // SEO 相关 JSON { title, description, keywords[] }
  status      BlogStatus @default(DRAFT)        // 发布状态
  view_count  Int        @default(0)            // 浏览量

  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt

  @@unique([slug, language]) // 确保同一语言下 slug 唯一
}

enum BlogStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String
  role       Role     @default(user)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

enum ProductImageType {
  MAIN    // 主图
  VICE    // 副图
  DETAIL  // 详情图
}

enum ProductStatus {
  ACTIVE    // 上架
  INACTIVE  // 下架
  DRAFT     // 草稿
}

enum Role {
  user    // 用户
  staff   // 员工
  admin   // 管理员
}
